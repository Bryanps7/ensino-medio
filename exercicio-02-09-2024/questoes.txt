1 - Elabore um programa onde são gerados 10 números aleatórios de zero a 10 e
guarde em um array. Depois verifique se o número é primo, para os seguintes
números primos: [ 2, 3, 5, 7]. Ainda, separe em dois arrays distintos, os números
primos gerados e os números não primos gerados. Depois some todos os
números primos e some todos os números que não são primos. Apresente o
resultado usando o comando console.table. Observação: faça o programa no
computador em back end com o Node.js e a seguinte função Random:
valorAleatorio = Math.floor(Math.random() * (max - min + 1) ) + min)
Observação: Números Primos considerados para o problema: [ 2, 3, 5, 7]

2 - Faça um programa que gere 20 números aleatórios com a função “ramdom”
e guarde em um array. O intervalo dos números gerados é de 1 a 20. A partir
deste array, faça a média dos números pares e ímpares e apresente o resultado
na tela do array dos números aleatórios e as respectivas somas.
Requisito: o programa deve ter 2 funções separadas, uma para gerar os valores
aleatórios e outra para fazer a média dos números pares e ímpares. Faça o
programa com HTML, CSS e Javascript.
Observação: Para a função “ramdom”, use a seguinte expressão:
valorAleatorio = Math.floor(Math.random() * (max - min + 1) ) + min)
onde: max: é o maior número do intervalo e min: é o menor número do
intervalo.

3 - Elabore um programa que gera uma matriz 4 x 4 onde os elementos da
diagonal secundária são iguais a 1 e os demais elementos são iguais a zero.
Some esta matriz com a matriz identidade. Use o laço “for” para elaborar a
lógica do programa. Apresente o resultado usando o comando console.table.
Observação: faça o programa no computador em back end com o Node.js

4 - Elabore um programa que gera uma matriz 4 x 4 onde todos os elementos
da diagonal principal são iguais a 7. Elabore uma matriz 4 x 4 onde todos os
elementos são iguais a 3. Faça a soma das matrizes. Use o laço “for” para
elaborar a lógica do programa. Apresente o resultado usando o comando
console.table.
Observação: Apresente o código em back end com o Node.js.